// WAP to print even numbers till n. 


import java.util.*;
public class Main
{
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		for(int i=1;i<=n;i++)
		if(i%2==0)
		System.out.print(i+" ");
	}
}

//WAP to print all multiples of 7 till n

import java.util.*;
public class Main
{
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		for(int i=1;i<=n;i++)
		System.out.print((i*7)+" ");
	}
}


//WAP to count multiples of 3, multiples of 5 and both 3,5 in range 1-n.


import java.util.*;
public class Main
{
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int count=0;
		int n = sc.nextInt();
		for(int i=1;i<=n;i++)
		{
		if(i%3==0)
		count++;
		}
		System.out.println(count);
		count=0;
		for(int i=1;i<=n;i++)
		{
		if(i%5==0)
		count++;
		}
		System.out.println(count);
		count=0;
		for(int i=1;i<=n;i++)
		{
		    if(i%3==0 && i%5==0)
		    count++;
		}
		System.out.println(count);
	}
}


//WAP to input n, loop for n times and input 2 numbers in each iteration, if iteration is even(0th,2nd,4th..) print sum else print multplication.


import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    Scanner sc = new Scanner(System.in);
	    int n = sc.nextInt();
	    for(int i=0;i<=n;i++)
	    {
	        System.out.println("enter 1st number");
	        int a=sc.nextInt();
	        System.out.println("enter 2nd number");
	        int b=sc.nextInt();
	        if(i%2==0)
	        {
	            System.out.println("sum  "+(a+b));
	        }
	        else
	        {
	            System.out.println("multiplication  "+(a*b));
	        }
	    }
	}
}

//WAP print 1 2 3 4
            5 6 7 8
            9 10 11 12
	    
	    import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    Scanner sc = new Scanner(System.in);
	    int n = sc.nextInt();
	    for(int i=1;i<=n;i++)
	    {
	        System.out.print(" "+i);
	        if(i%4==0)
	        System.out.println();
	    }
	    
	}
}


// WAP to count number of pairs in 1-n with sum even.
